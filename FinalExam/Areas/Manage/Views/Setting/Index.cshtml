@using FinalExam.Models;
@using FinalExam.ViewModels;

@model PaginateVM<Setting>

@{
    int count = (Model.CurrentPage - 1) + Model.Take;
}
    <div class="row">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Key</th>
                <th scope="col">Value</th>
                <th scope="col">Settings</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                count++;
                <tr>
                    <th scope="row">@count</th>
                    <td>@item.Key</td>
                    <td>@item.Value</td>
                    <td>
                        <a asp-controller="Setting" asp-action="Update" class="btn btn-primary">Update</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link @(Model.CurrentPage==1?"disabled":"")" asp-controller="Team" asp-action="Index" asp-route-page=@(Model.CurrentPage-1) aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @for (int i = 0; i < Model.TotalPage; i++)
                {
                    <li class="page-item @(Model.CurrentPage==i+1?"active":"")"><a class="page-link" asp-controller="Team" asp-action="Index" asp-route-page=@(i+1)>@(i + 1)</a></li>
                }

                <li class="page-item">
                    <a class="page-link @(Model.CurrentPage>=Model.TotalPage?"disabled":"") " asp-controller="Team" asp-action="Index" asp-route-page=@(Model.CurrentPage+1) aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    </div>